/*
 * Simple Inventory API
 *
 * This is API for cloud-based microservice
 *
 * API version: 1.0.0
 * Contact: newmail@mail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/None368/Acronis/1.0.0/",
		Index,
	},

	Route{
		"DeleteAll",
		strings.ToUpper("Delete"),
		"/None368/Acronis/1.0.0/all",
		DeleteAll,
	},

	Route{
		"GetAllInfo",
		strings.ToUpper("Get"),
		"/None368/Acronis/1.0.0/all",
		GetAllInfo,
	},

	Route{
		"DeleteAllLogs",
		strings.ToUpper("Delete"),
		"/None368/Acronis/1.0.0/logs",
		DeleteAllLogs,
	},

	Route{
		"DeleteLogsById",
		strings.ToUpper("Delete"),
		"/None368/Acronis/1.0.0/logs/{id}",
		DeleteLogsById,
	},

	Route{
		"GetLogsById",
		strings.ToUpper("Get"),
		"/None368/Acronis/1.0.0/logs/{id}",
		GetLogsById,
	},

	Route{
		"PostLogs",
		strings.ToUpper("Post"),
		"/None368/Acronis/1.0.0/logs",
		PostLogs,
	},

	Route{
		"DeleteAllMetrics",
		strings.ToUpper("Delete"),
		"/None368/Acronis/1.0.0/metrics",
		DeleteAllMetrics,
	},

	Route{
		"DeleteMetricById",
		strings.ToUpper("Delete"),
		"/None368/Acronis/1.0.0/metrics/{id}",
		DeleteMetricById,
	},

	Route{
		"GetMetricById",
		strings.ToUpper("Get"),
		"/None368/Acronis/1.0.0/metrics/{id}",
		GetMetricById,
	},

	Route{
		"PostMetric",
		strings.ToUpper("Post"),
		"/None368/Acronis/1.0.0/metrics",
		PostMetric,
	},
}
